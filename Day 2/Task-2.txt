Window Object:
    The Window object is a global object in client-side JavaScript, representing the browser window containing a DOM document and acting as the root of the document object model.

    The window object, supported by all browsers, represents the browser’s window and automatically includes global JavaScript objects, functions, and variables as members.

    The Window object is responsible for managing global variables, functions, and objects, providing methods for browser interaction and managing properties related to frames, tabs, or windows, such as alert(), confirm(), setTimeout(), and setInterval(). 

        1. Global Object: The window object represents the browser window or tab that contains the web page. It is the global object in client-side JavaScript.

        2. Browser Window Properties and Methods: The window object provides access to various properties and methods related to the browser window, such as window.innerWidth, window.innerHeight, window.location, window.alert(), window.setTimeout(), etc.

        3. Global Scope: Variables and functions declared in the global scope are attached to the window object. For example, if you declare a global variable x, it becomes a property of the window object (window.x).


Document Object:
    
    The Document object is the HTML document that appears in the browser window and serves as an interface for interacting with the web page’s content. The browser generates a Document Object Model of a web page upon loading it.

    The document object in JavaScript represents the HTML document loaded in the browser window. It provides a structured representation of the web page's content, known as the Document Object Model (DOM). The DOM represents the document as a tree-like structure of nodes, where each node corresponds to an element, attribute, or piece of text in the HTML document.

        1. Document Object Model (DOM): The document object represents the HTML document loaded in the browser window. It provides access to the structure and content of the document, allowing JavaScript to interact with and manipulate the elements on the web page.

        2. Document Methods and Properties: The document object provides methods and properties to access and modify various aspects of the document, such as document.getElementById(), document.querySelector(), document.title, document.createElement(), etc.

        3. Element Context: The document object serves as the entry point to access and manipulate individual HTML elements within the document.